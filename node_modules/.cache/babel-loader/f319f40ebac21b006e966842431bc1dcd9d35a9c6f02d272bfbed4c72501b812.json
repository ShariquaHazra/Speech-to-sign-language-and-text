{"ast":null,"code":"var _jsxFileName = \"/Users/shariquahazra/Desktop/SpeechSign-AI-Speech-to-ISL/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SignLanguageDisplay from './SignLanguageDisplay';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [audioContext, setAudioContext] = useState(null);\n  const [mediaStream, setMediaStream] = useState(null);\n  const [transcript, setTranscript] = useState('');\n  const [nlpResults, setNlpResults] = useState(null);\n  const startListening = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      setMediaStream(stream);\n      setAudioContext(audioCtx);\n\n      // Speech recognition setup\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.onresult = event => {\n        let interimTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const transcriptChunk = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            setTranscript(prevTranscript => prevTranscript + transcriptChunk);\n          } else {\n            interimTranscript += transcriptChunk;\n          }\n        }\n        console.log('Interim transcript:', interimTranscript);\n      };\n      recognition.start();\n      setIsListening(true);\n    } catch (err) {\n      console.error('Error accessing microphone:', err);\n    }\n  };\n  const stopListening = () => {\n    if (audioContext && mediaStream) {\n      mediaStream.getTracks().forEach(track => track.stop());\n      audioContext.close();\n      setIsListening(false);\n      setAudioContext(null);\n      setMediaStream(null);\n    }\n  };\n  const handleButtonClick = () => {\n    if (isListening) {\n      stopListening();\n    } else {\n      startListening();\n    }\n  };\n  const handleSubmit = async () => {\n    console.log('Text submitted:', transcript);\n    await processText(transcript);\n    // Clear the transcript to prepare for new input\n    setTranscript('');\n    if (isListening) {\n      stopListening();\n    }\n  };\n  const processText = async text => {\n    try {\n      console.log('Sending text to backend:', text); // Log the text being sent\n      const response = await axios.post('http://localhost:5000/process', {\n        text\n      });\n      console.log('Received response from backend:', response.data); // Log the response\n      setNlpResults(response.data);\n    } catch (error) {\n      console.error('Error processing text', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter input audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"mic.png\",\n        alt: \"mic\",\n        height: \"60px\",\n        width: \"60px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this), isListening ? 'Stop Listening' : 'Start Listening']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: transcript,\n      readOnly: true,\n      placeholder: \"Transcribed text will appear here...\",\n      rows: \"3\",\n      cols: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"video\",\n        children: \"Indian Sign Language Video Output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: /*#__PURE__*/_jsxDEV(SignLanguageDisplay, {\n        text: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xX74IWMqV1YQDAE8uSIfmiDzp6w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","SignLanguageDisplay","jsxDEV","_jsxDEV","App","_s","isListening","setIsListening","audioContext","setAudioContext","mediaStream","setMediaStream","transcript","setTranscript","nlpResults","setNlpResults","startListening","stream","navigator","mediaDevices","getUserMedia","audio","audioCtx","window","AudioContext","webkitAudioContext","SpeechRecognition","webkitSpeechRecognition","recognition","continuous","interimResults","onresult","event","interimTranscript","i","resultIndex","results","length","transcriptChunk","isFinal","prevTranscript","console","log","start","err","error","stopListening","getTracks","forEach","track","stop","close","handleButtonClick","handleSubmit","processText","text","response","post","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","height","width","value","readOnly","placeholder","rows","cols","_c","$RefreshReg$"],"sources":["/Users/shariquahazra/Desktop/SpeechSign-AI-Speech-to-ISL/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport SignLanguageDisplay from './SignLanguageDisplay';\nimport './App.css';\n\nfunction App() {\n  const [isListening, setIsListening] = useState(false);\n  const [audioContext, setAudioContext] = useState(null);\n  const [mediaStream, setMediaStream] = useState(null);\n  const [transcript, setTranscript] = useState('');\n  const [nlpResults, setNlpResults] = useState(null);\n\n  const startListening = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      \n      setMediaStream(stream);\n      setAudioContext(audioCtx);\n      \n      // Speech recognition setup\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n\n      recognition.onresult = (event) => {\n        let interimTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const transcriptChunk = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            setTranscript(prevTranscript => prevTranscript + transcriptChunk);\n          } else {\n            interimTranscript += transcriptChunk;\n          }\n        }\n        console.log('Interim transcript:', interimTranscript);\n      };\n\n      recognition.start();\n\n      setIsListening(true);\n    } catch (err) {\n      console.error('Error accessing microphone:', err);\n    }\n  };\n\n  const stopListening = () => {\n    if (audioContext && mediaStream) {\n      mediaStream.getTracks().forEach(track => track.stop());\n      audioContext.close();\n\n      setIsListening(false);\n      setAudioContext(null);\n      setMediaStream(null);\n    }\n  };\n\n  const handleButtonClick = () => {\n    if (isListening) {\n      stopListening();\n    } else {\n      startListening();\n    }\n  };\n\n  const handleSubmit = async () => {\n    console.log('Text submitted:', transcript);\n    await processText(transcript);\n    // Clear the transcript to prepare for new input\n    setTranscript('');\n    if (isListening) {\n      stopListening();}\n  };\n\n  const processText = async (text) => {\n    try {\n      console.log('Sending text to backend:', text); // Log the text being sent\n      const response = await axios.post('http://localhost:5000/process', { text });\n      console.log('Received response from backend:', response.data); // Log the response\n      setNlpResults(response.data);\n    } catch (error) {\n      console.error('Error processing text', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Enter input audio</h2>\n      <button onClick={handleButtonClick}>\n        <img src={\"mic.png\"} alt=\"mic\" height='60px' width='60px'/>\n        <br /><br />\n        {isListening ? 'Stop Listening' : 'Start Listening'}\n      </button>\n      <br /><br />     \n    <textarea\n        value={transcript}\n        readOnly\n        placeholder=\"Transcribed text will appear here...\"\n        rows=\"3\"\n        cols=\"50\"\n      />\n      <br /><br />\n      <button className=\"btn\" onClick={handleSubmit}>Submit</button>\n      {/* {nlpResults && (\n        \n        <div>\n          <br></br>\n          <h2>NLP Results</h2>\n          <h3>Message:</h3>\n          {nlpResults.message}\n          <h3>Input Text:</h3>\n          {nlpResults.input_text}\n          <h3>Tokens:</h3>\n          {nlpResults.tokens.join(', ')}\n          <h3>Filtered Tokens:</h3>\n          <p>{nlpResults.filtered_tokens.join(', ')}</p>\n          <h3>POS Tags:</h3>\n          <p>{nlpResults.pos_tags.map(tag => `${tag[0]} (${tag[1]})`).join(', ')}</p>\n          <h3>Entities:</h3>\n          <p>{nlpResults.entities.map(ent => `${ent[0]} (${ent[1]})`).join(', ')}</p>\n          <h3>Lemmas:</h3>\n          <p>{nlpResults.lemmas.join(', ')}</p>\n        </div>\n      )} */}\n      <h2><p className='video'>Indian Sign Language Video Output</p></h2>\n      <div className=\"video-container\">\n        <SignLanguageDisplay text={transcript} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}